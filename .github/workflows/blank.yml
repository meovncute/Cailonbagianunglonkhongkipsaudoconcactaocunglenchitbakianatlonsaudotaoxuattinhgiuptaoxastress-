name: jrjd

on: 
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: chuẩn bị phần mềm
        run: |
          sudo apt update -y
          sudo apt install qemu-kvm cpulimit wget websockify -y
      - name: Tải và khởi chạy NoVNC (port 6080)
        run: |
          sudo wget https://github.com/novnc/noVNC/archive/refs/heads/master.zip
          sudo unzip master.zip
          sudo mv noVNC-master novnc
          sudo nohup websockify --web=novnc 6080 localhost:5900 &

      - name: Cài và khởi chạy Cloudflared tunnel
        run: |
          wget -O cloudflared https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64
          chmod +x cloudflared

          # Chạy tunnel nền và ghi log
          ./cloudflared tunnel --url http://localhost:6080 > log.txt 2>&1 &
          
          # Chờ đến khi link xuất hiện
          for i in {1..15}; do
            LINK=$(grep -o 'https://.*\.trycloudflare.com' log.txt | head -n1)
            if [[ -n "$LINK" ]]; then
              echo "Link found: $LINK"
              break
            fi
            sleep 1
          done

          # Nếu không có link thì báo lỗi rõ
          if [[ -z "$LINK" ]]; then
            echo "❌ Không tìm thấy link Cloudflare!"
            LINK="(không tạo được)"
          fi

          echo "{\"url\": \"$LINK\"}" > vnc.json
      - name: gửi link VNC lên Discord
        run: |
          VNC_LINK=$(jq -r '.vnc' vnc.json)
          curl -H "Content-Type: application/json" -X POST \
            -d "{\"content\": \"🔗 **VNC is ready**: $VNC_LINK\"}" \
            https://discord.com/api/webhooks/1327906472029458495/1bSkWLlV_cdvWThG0xK3YNAP7MYTgmyKZB_oK_zIiiw0b7D3u3rsMDUHrYuXiNdeMftq
            
      - name: cài win và khởi chạy
        run: |
          sudo chmod 666 /dev/kvm
          sudo qemu-img create -f qcow2 /mnt/a.qcow2 64G
          sudo qemu-img create -f raw a.img 20G
          wget -O file.iso "https://downloads.sourceforge.net/project/android-x86/Release%209.0/android-x86_64-9.0-r2.iso?ts=gAAAAABojz3EjWACfCdvHbPHSFhINoyZsU6RBhUXqXFNhM053apHfgKHatY7EkOnGGVRUlwxAeUDK5eVzIihgWj-8GHCUIVOEw%3D%3D&use_mirror=zenlayer&r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fandroid-x86%2Ffiles%2F" &>/dev/null &
          while ps axg | grep -vw grep | grep -w wget > /dev/null; do sleep 1; done
          wget -O driver.iso https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.240-1/virtio-win-0.1.240.iso &>/dev/null &
          while ps axg | grep -vw grep | grep -w wget > /dev/null; do sleep 1; done
          echo "thanh cong, ket noi voi port 5924 bang spice"
          tailscale ip -4 || true
          sudo cpulimit -l 60 -- sudo kvm -M q35,usb=on -device usb-tablet -cpu host,hv_passthrough -smp 4 -m 12G -device virtio-balloon-pci -vga qxl -net nic,netdev=n0 -netdev user,id=n0,hostfwd=tcp::3389-:3389 -boot c -device virtio-serial-pci -device virtio-rng-pci -enable-kvm -drive file=/mnt/a.qcow2 -drive file=file.iso,media=cdrom -drive file=a.img,format=raw,id=stick,if=none -device nec-usb-xhci,id=xhci -device usb-storage,bus=xhci.0,drive=stick -drive file=driver.iso,media=cdrom  -vnc :0 -bios /usr/share/ovmf/OVMF.fd -uuid e47ddb84-fb4d-46f9-b531-14bb15156336 -spice port=5924,disable-ticketing &
          while ps axg | grep -vw grep | grep -w qemu-system-x86_64 > /dev/null; do sleep 1; done
